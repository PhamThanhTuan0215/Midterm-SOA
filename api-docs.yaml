openapi: 3.0.3

info:
  title: Restaurant API
  description: API documentation for restaurant operations
  version: 1.0.11

servers:
  - url: http://localhost:8888

tags:
  - name: Customer
  - name: Waiter/Manager
  - name: Chef

paths:
  /customer:
    post:
      tags:
        - Customer
      summary: Customer user interface
      description: Customer accesses the customer user interface
      parameters:
        - name: token
          in: query
          description: Customer's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lciI6IlBoYXQiLCJ0YWJsZV9jb2RlIjoxLCJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3MTM1Mjc0MjYsImV4cCI6MTcxMzU0OTAyNn0.OWbCY9gilukyfHVesUZwLoprQRPKqHPdb1LPF-xe7YA
      requestBody:
        description: Information of customer
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: string
                  example: Phat
                table_code:
                  type: integer
                  example: 1
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                customer:
                  type: string
                  example: Phat
                table_code:
                  type: integer
                  example: 1
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: HTML content for the Customer interface
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /customer/login:
    post:
      tags:
        - Customer
      summary: Login
      description: Customer login
      requestBody:
        description: Information of customer
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer-Information"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Customer-Information"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Login success
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lciI6IlBoYXQiLCJ0YWJsZV9jb2RlIjoxLCJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3MTM0NDE0NDYsImV4cCI6MTcxMzQ2MzA0Nn0.uIc3phjr1wr_gDRN16BuJ2CGqNNKugN3WW-vNsJh7pg
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /customer/logout:
    get:
      tags:
        - Customer
      summary: Logout
      description: Customer logout
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Redirect to HTML content for the Home page
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /customer/food:
    get:
      tags:
        - Customer
      summary: Get food by category
      description: etrieve food items by category
      parameters:
        - name: token
          in: query
          description: Customer's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lciI6IlBoYXQiLCJ0YWJsZV9jb2RlIjoxLCJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3MTM1Mjc0MjYsImV4cCI6MTcxMzU0OTAyNn0.OWbCY9gilukyfHVesUZwLoprQRPKqHPdb1LPF-xe7YA
        - name: category
          in: query
          description: Food category
          required: true
          schema:
            type: string
            default: main food
            enum:
              - main food
              - drinks
              - extra food
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /customer/get-order:
    get:
      tags:
        - Customer
      summary: Get customer order
      description: Get information about customer order
      parameters:
        - name: token
          in: query
          description: Customer's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lciI6IlBoYXQiLCJ0YWJsZV9jb2RlIjoxLCJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3MTM1Mjc0MjYsImV4cCI6MTcxMzU0OTAyNn0.OWbCY9gilukyfHVesUZwLoprQRPKqHPdb1LPF-xe7YA
        - name: customer
          in: query
          description: Customer's name
          required: true
          schema:
            type: string
            example: Phat
        - name: table_code
          in: query
          description: Table code
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  order:
                    $ref: "#/components/schemas/OrderItem"
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /customer/order-food:
    post:
      tags:
        - Customer
      summary: Order food
      description: Customer order food
      parameters:
        - name: token
          in: query
          description: Customer's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjdXN0b21lciI6IlBoYXQiLCJ0YWJsZV9jb2RlIjoxLCJyb2xlIjoiY3VzdG9tZXIiLCJpYXQiOjE3MTM1Mjc0MjYsImV4cCI6MTcxMzU0OTAyNn0.OWbCY9gilukyfHVesUZwLoprQRPKqHPdb1LPF-xe7YA
      requestBody:
        description: Information of order id and list food
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order-Food"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Added food to order successfully
                  order:
                    $ref: "#/components/schemas/OrderItem"
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItemToOrder"

        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef:
    post:
      tags:
        - Chef
      summary: Chef user interface
      description: Chef accesses the chef user interface
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
      requestBody:
        description: Information of chef
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Information"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Information"
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: HTML content for the chef interface
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/login:
    post:
      tags:
        - Chef
      summary: Login
      description: Chef login
      requestBody:
        description: Information of chef
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Information"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Information"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Login success
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNjA3NiwiZXhwIjoxNzEzNTQ3Njc2fQ.LN_7cyDuDh0U6gKJ5BHpx5_UT4vfuo5mmo0dOY5aCYY
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/logout:
    get:
      tags:
        - Chef
      summary: Logout
      description: Chef logout
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Redirect to HTML content for the Home page
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/food-management:
    get:
      tags:
        - Chef
      summary: Get list food
      description: Chef manages list food
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/set-status-food:
    get:
      tags:
        - Chef
      summary: toggle status food
      description: Chef toggle status food
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
        - name: name
          in: query
          description: Food's name
          required: true
          schema:
            type: string
            example: Pizza
        - name: status
          in: query
          description: Food's status
          required: true
          schema:
            type: boolean
            example: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  updatedFood:
                    $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/orders:
    get:
      tags:
        - Chef
      summary: Get list order today
      description: Chef takes the order list today
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listOrder:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/detail-order:
    get:
      tags:
        - Chef
      summary: Detail order
      description: Chef takes the details of the order
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
        - name: orderId
          in: query
          description: Id of order
          required: true
          schema:
            type: string
            example: 6620f82dfc1935f322b6d0d6
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  order:
                    $ref: "#/components/schemas/OrderItem"
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/completed-order:
    get:
      tags:
        - Chef
      summary: Complete order
      description: Chef marks the order complete
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
        - name: orderId
          in: query
          description: Id of order
          required: true
          schema:
            type: string
            example: 6620f82dfc1935f322b6d0d6
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: The order has been marked complete
                  updatedOrder:
                    $ref: "#/components/schemas/OrderItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /chef/change-password:
    post:
      tags:
        - Chef
      summary: Change Password
      description: Chef change account password
      parameters:
        - name: token
          in: query
          description: Chef's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiQzAwMSIsIm5hbWUiOiJUYW4gVGhhbmgiLCJyb2xlIjoiY2hlZiIsImVtYWlsIjoiY3Rib25nZGVtLm5nQGdtYWlsLmNvbSIsImlhdCI6MTcxMzUyNzI3OCwiZXhwIjoxNzEzNTQ4ODc4fQ.GaLZNZ9ZB-XGQPUrt5XI9QYsQH_YAKdM5PrCI7_A_ug
        - name: id
          in: query
          description: Id of employee account
          required: true
          schema:
            type: string
            example: 6609431c63278e5b966308d5
      requestBody:
        description: Information of passwords
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Passwords"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Passwords"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Change password successfully
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager:
    post:
      tags:
        - Waiter/Manager
      summary: Waiter and Manager user interface
      description: Waiter and Manager accesses the waiter/manager user interface
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      requestBody:
        description: Information of waiter or manager
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Information"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Information"
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: HTML content for the waiter/manager interface
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/login:
    post:
      tags:
        - Waiter/Manager
      summary: Login
      description: Waiter and Manager login
      requestBody:
        description: Information of waiter or manager
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Information"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Information"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Login success
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/logout:
    get:
      tags:
        - Waiter/Manager
      summary: Logout
      description: Waiter and Manager logout
      responses:
        "200":
          description: Successful response
          content:
            text/html:
              schema:
                type: string
                example: Redirect to HTML content for the Home page
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/occupied-tables:
    get:
      tags:
        - Waiter/Manager
      summary: Get list occupied-tables
      description: Waiter and Manager get list occupied-tables
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  occupiedTables:
                    type: object
                    properties:
                      customer:
                        type: string
                        example: Phat
                      table_code:
                        type: string
                        example: 1
                      OTP:
                        type: string
                        example: g5cs
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/new-order:
    post:
      tags:
        - Waiter/Manager
      summary: New order
      description: Waiter and Manager add new order
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      requestBody:
        description: Customer information
        content:
          application/json:
            schema:
              type: object
              properties:
                customer:
                  type: string
                  example: Thanh Nam
                customers_number:
                  type: integer
                  example: 4
                table_code:
                  type: integer
                  example: 8
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                customer:
                  type: string
                  example: Thanh Nam
                customers_number:
                  type: integer
                  example: 4
                table_code:
                  type: integer
                  example: 8
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Opened successfully, table code: 1"
                  order:
                    $ref: "#/components/schemas/OrderItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/search-order:
    get:
      tags:
        - Waiter/Manager
      summary: Search order
      description: Waiter and Manager search order for payment
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: customer
          in: query
          description: Customer's name
          required: true
          schema:
            type: string
            example: Phat
        - name: table_code
          in: query
          description: Table code
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  order:
                    $ref: "#/components/schemas/OrderItem"
                  listFood:
                    type: array
                    $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/delete-order:
    get:
      tags:
        - Waiter/Manager
      summary: Delete order
      description: Waiter and Manager delete order
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: table_code
          in: query
          description: Table code
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: "Delete order successfully, table code: 1"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/payment:
    post:
      tags:
        - Waiter/Manager
      summary: Payment
      description: Waiter and Manager pay an order
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      requestBody:
        description: Customer information
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeId:
                  type: string
                  example: W001
                orderId:
                  type: string
                  example: 662202bf50a92d4bbd75fa12
                received:
                  type: number
                  example: 15.00
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                employeeId:
                  type: string
                  example: W001
                orderId:
                  type: string
                  example: 662202bf50a92d4bbd75fa12
                received:
                  type: number
                  example: 15.00
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Payment successfully
                  refund:
                    type: number
                    example: 3.02
                  bill:
                    $ref: "#/components/schemas/BillItem"

        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/bills-shift:
    get:
      tags:
        - Waiter/Manager
      summary: Bills current shift
      description: Manager get list bill in current shift
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: shift
          in: query
          description: Current shift
          required: true
          schema:
            type: integer
            default: 1
            enum:
              - 1
              - 2
              - 3
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listBill:
                    type: array
                    $ref: "#/components/schemas/BillItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/bills-date:
    get:
      tags:
        - Waiter/Manager
      summary: Bills in date
      description: Manager get list bill in date selected
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: startDate
          in: query
          description: Date start
          required: true
          schema:
            type: string
            example: 04/20/2024
        - name: endDate
          in: query
          description: Date end
          required: true
          schema:
            type: string
            example: 04/25/2024
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listBill:
                    type: array
                    $ref: "#/components/schemas/BillItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/detail-bill:
    get:
      tags:
        - Waiter/Manager
      summary: Bill detail
      description: Manager get details of bill
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: billId
          in: query
          description: Id of bill
          required: true
          schema:
            type: string
            example: 6620c2e0a6fef6bb8bf4d4d2
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  bill:
                    $ref: "#/components/schemas/BillItem"
                  listFood:
                    type: array
                    items:
                      $ref: "#/components/schemas/FoodItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/employees:
    get:
      tags:
        - Waiter/Manager
      summary: List employees
      description: Manager get list employee account
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  listEmployee:
                    type: array
                    $ref: "#/components/schemas/EmployeeItem"
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/employees/add:
    post:
      tags:
        - Waiter/Manager
      summary: Add employee
      description: Manager add new employee account
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
      requestBody:
        description: Information of employee account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Account"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Add employee successfully
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/employees/delete:
    get:
      tags:
        - Waiter/Manager
      summary: Delete employee
      description: Manager delete employee account
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: id
          in: query
          description: Id of employee account
          required: true
          schema:
            type: string
            example: 6623a6a041eeeaa383c0ec74
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Delete employee successfully (W003)
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/employees/edit:
    post:
      tags:
        - Waiter/Manager
      summary: Edit employee
      description: Manager edit employee account
      parameters:
        - name: token
          in: query
          description: Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: id
          in: query
          description: Id of employee account
          required: true
          schema:
            type: string
            example: 6623a6a041eeeaa383c0ec74
      requestBody:
        description: Information of employee account
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Account"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Update employee successfully
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

  /waiter-manager/change-password:
    post:
      tags:
        - Waiter/Manager
      summary: Change Password
      description: Waiter and Manager change account password
      parameters:
        - name: token
          in: query
          description: Waiter/Manager's token
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbXBsb3llZUlkIjoiTTAwMSIsIm5hbWUiOiJOYW0gUGhhdCIsInJvbGUiOiJtYW5hZ2VyIiwiZW1haWwiOiJkYW5jYW11MTAwMkBnbWFpbC5jb20iLCJpYXQiOjE3MTM1ODY2NjAsImV4cCI6MTcxMzYwODI2MH0.oM9YEJDhIBaGddvYzUYqyj2fG1PBTGXmd5Kgxxatxuw
        - name: id
          in: query
          description: Id of employee account
          required: true
          schema:
            type: string
            example: 660942e963278e5b966308d3
      requestBody:
        description: Information of passwords
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee-Passwords"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Employee-Passwords"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    example: 0
                  message:
                    type: string
                    example: Change password successfully
        "400":
          description: The server cannot understand the request due to a syntax error or invalid data from the client
        "404":
          description: The requested resource could not be found on the server
        "500":
          description: An undefined server error occurred while processing the request

components:
  schemas:
    FoodItem:
      type: object
      properties:
        _id:
          type: string
          example: 66091d4363278e5b966308ba
        name:
          type: string
          example: Pizza
        price:
          type: number
          example: 9.99
        category:
          type: string
          example: main food
        url_image:
          type: string
          example: Pizza.png
        status:
          type: boolean
          example: true

    OrderItem:
      type: object
      properties:
        _id:
          type: string
          example: 6620be4d35d390948ef9c9a8
        employeeId:
          type: string
          example: W001
        customer:
          type: string
          example: Quoc Kien
        customers_number:
          type: integer
          example: 3
        table_code:
          type: integer
          example: 1
        status_completed:
          type: boolean
          example: true
        status_payment:
          type: boolean
          example: true
        status_check:
          type: boolean
          example: true
        timestamp:
          type: string
          example: "2024-04-18T06:31:41.752+00:00"

    BillItem:
      type: object
      properties:
        _id:
          type: string
          example: 6620c2e0a6fef6bb8bf4d4d2
        employeeId:
          type: string
          example: W001
        customer:
          type: string
          example: Quoc Kien
        table_code:
          type: integer
          example: 1
        orderId:
          type: string
          example: 6620be4d35d390948ef9c9a8
        total_price:
          type: number
          example: 26.75
        received:
          type: number
          example: 30
        refund:
          type: number
          example: 3.25
        date:
          type: string
          example: 04/18/2024
        shift:
          type: integer
          example: 2

    EmployeeItem:
      type: object
      properties:
        _id:
          type: string
          example: 660942e963278e5b966308d3
        employeeId:
          type: string
          example: M001
        name:
          type: string
          example: Nam Phat
        role:
          type: string
          example: manager
        email:
          type: string
          example: dancamu1002@gmail.com
        password:
          type: string
          example: 066cce7bed7c645491183961563921cfffedfec33e319612cad9e720da9cb75f

    FoodItemToOrder:
      type: object
      properties:
        name:
          type: string
          example: Hamburger
        quantity:
          type: number
          example: 1
        totalPrice:
          type: number
          example: 8.49
        note:
          type: string
          example: ít rau

    Order-Food:
      type: object
      properties:
        orderId:
          type: integer
          example: 6620be4d35d390948ef9c9a8
        listFoods:
          type: array
          items:
            $ref: "#/components/schemas/FoodItemToOrder"

    Customer-Information:
      type: object
      properties:
        customer:
          type: string
          example: Phat
        table_code:
          type: integer
          example: 1
        OTP:
          type: string
          example: g5cs

    Employee-Information:
      type: object
      properties:
        email:
          type: string
          example: ctbongdem.ng@gmail.com
        password:
          type: string
          example: 066cce7bed7c645491183961563921cfffedfec33e319612cad9e720da9cb75f

    Employee-Account:
      type: object
      properties:
        employeeId:
          type: string
          example: W003
        name:
          type: string
          example: Nhat Hung
        role:
          type: string
          example: waiter
        email:
          type: string
          example: nhathung@gmail.com
        password:
          type: string
          example: 066cce7bed7c645491183961563921cfffedfec33e319612cad9e720da9cb75f

    Employee-Passwords:
      type: object
      properties:
        oldPassword:
          type: string
          example: 066cce7bed7c645491183961563921cfffedfec33e319612cad9e720da9cb75f
        newPassword:
          type: string
          example: f4254c3c979307134c4c48438120893aff3f8a13dd2f8e0f94acda988bdb02a4
